import pygame
import json
import os

class AnimatedCharacter(pygame.sprite.Sprite):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç pygame.sprite.Sprite –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏!
    
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –î–í–ê —Ä–µ–∂–∏–º–∞:
    1. –û—Ç–¥–µ–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    2. –û–¥–∏–Ω –±–æ–ª—å—à–æ–π —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç —Å–æ –≤—Å–µ–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ (–∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥)
    
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¢–†–ò —Ä–µ–∂–∏–º–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:
    1. AUTO_FLIP - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    2. SEPARATE_DIRECTIONS - –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    3. NO_FLIP - –±–µ–∑ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–µ–∂–∏–º–æ–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    AUTO_FLIP = "auto_flip"
    SEPARATE_DIRECTIONS = "separate_directions"  
    NO_FLIP = "no_flip"
    
    def __init__(self, x=0, y=0, scale=1.0, direction_mode=AUTO_FLIP):
        """
        –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        x, y - –ø–æ–∑–∏—Ü–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        scale - —Ä–∞–∑–º–µ—Ä (1.0 = –æ–±—ã—á–Ω—ã–π, 2.0 = –≤ –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ)
        direction_mode - —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:
            AUTO_FLIP - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
            SEPARATE_DIRECTIONS - –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –ª–µ–≤–æ/–ø—Ä–∞–≤–æ
            NO_FLIP - –±–µ–∑ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        """
        # –í–ê–ñ–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å pygame.sprite.Sprite
        super().__init__()
        
        self.x = x
        self.y = y
        self.scale = scale
        self.direction_mode = direction_mode
        
        # –°–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –∞–Ω–∏–º–∞—Ü–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        self.animations = {}
        self.current_animation = None
        self.current_frame = 0
        self.animation_timer = 0
        self.animation_speed = 10
        
        # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        self.facing_right = True
        
        # –†–∞–∑–º–µ—Ä—ã —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞
        self.current_frame_width = 64
        self.current_frame_height = 64
        
        # –î–ª—è —Ä–µ–∂–∏–º–∞ "–æ–¥–∏–Ω –±–æ–ª—å—à–æ–π —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç"
        self.master_sprite_sheet = None
        self.master_frame_width = 64
        self.master_frame_height = 64
        self.master_columns = 8  # –°–∫–æ–ª—å–∫–æ –∫–∞–¥—Ä–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
        self.next_frame_index = 0  # –°–ª–µ–¥—É—é—â–∏–π —Å–≤–æ–±–æ–¥–Ω—ã–π –∫–∞–¥—Ä –≤ –±–æ–ª—å—à–æ–º —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–µ
        
        # –í–ê–ñ–ù–û: –ê—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è pygame.sprite.Sprite
        self.image = pygame.Surface((self.current_frame_width, self.current_frame_height), pygame.SRCALPHA)
        self.rect = pygame.Rect(x, y, self.current_frame_width, self.current_frame_height)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        self._original_image = None  # –•—Ä–∞–Ω–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç–æ–≤/–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    
    def set_direction_mode(self, mode):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        mode - AUTO_FLIP, SEPARATE_DIRECTIONS –∏–ª–∏ NO_FLIP
        """
        if mode in [self.AUTO_FLIP, self.SEPARATE_DIRECTIONS, self.NO_FLIP]:
            self.direction_mode = mode
            print(f"üîÑ –†–µ–∂–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {mode}")
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {mode}")
    
    def set_facing_direction(self, facing_right):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤—Ä—É—á–Ω—É—é
        facing_right - True –¥–ª—è –ø—Ä–∞–≤–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, False –¥–ª—è –ª–µ–≤–æ–≥–æ
        """
        self.facing_right = facing_right
    
    def load_master_sprite_sheet(self, sprite_file, frame_width=64, frame_height=64, columns=8):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ–º –û–î–ò–ù –ë–û–õ–¨–®–û–ô —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç —Å–æ –≤—Å–µ–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
        sprite_file - –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –±–æ–ª—å—à–∏–º —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–æ–º
        frame_width, frame_height - —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞
        columns - —Å–∫–æ–ª—å–∫–æ –∫–∞–¥—Ä–æ–≤ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        """
        try:
            self.master_sprite_sheet = pygame.image.load(sprite_file)
            self.master_frame_width = frame_width
            self.master_frame_height = frame_height
            self.master_columns = columns
            self.next_frame_index = 0
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –º–∞—Å—Ç–µ—Ä —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç: {sprite_file} ({frame_width}x{frame_height}, {columns} –∫–æ–ª–æ–Ω–æ–∫)")
            return True
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Å—Ç–µ—Ä —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç: {sprite_file}")
            print(f"   –û—à–∏–±–∫–∞: {e}")
            return False
    
    def add_animation_from_master(self, name, frames, speed=10, loop=True):
        """
        –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏–∑ –ë–û–õ–¨–®–û–ì–û —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞ (–∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥)
        name - –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
        frames - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤
        speed - —Å–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
        loop - –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é
        
        –ö–∞–¥—Ä—ã –±–µ—Ä—É—Ç—Å—è –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û –∏–∑ –±–æ–ª—å—à–æ–≥–æ —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞!
        """
        if self.master_sprite_sheet is None:
            print(f"‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–∞—Å—Ç–µ—Ä —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç —á–µ—Ä–µ–∑ load_master_sprite_sheet()")
            return False
        
        # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –∫–∞–¥—Ä–æ–≤
        frame_positions = []
        for i in range(frames):
            current_index = self.next_frame_index + i
            
            # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∏ –∫–æ–ª–æ–Ω–∫—É
            row = current_index // self.master_columns
            col = current_index % self.master_columns
            
            # –í—ã—á–∏—Å–ª—è–µ–º –ø–∏–∫—Å–µ–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            x = col * self.master_frame_width
            y = row * self.master_frame_height
            
            frame_positions.append((x, y))
        
        self.animations[name] = {
            'mode': 'master',
            'sprite_image': self.master_sprite_sheet,
            'frame_width': self.master_frame_width,
            'frame_height': self.master_frame_height,
            'frames': frames,
            'speed': speed,
            'loop': loop,
            'finished': False,
            'frame_positions': frame_positions
        }
        
        # –°–¥–≤–∏–≥–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –∫–∞–¥—Ä—ã
        self.next_frame_index += frames
        
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è, –¥–µ–ª–∞–µ–º –µ—ë —Ç–µ–∫—É—â–µ–π
        if self.current_animation is None:
            self.current_animation = name
            self.animation_speed = speed
            self.current_frame_width = self.master_frame_width
            self.current_frame_height = self.master_frame_height
            self._update_sprite_attributes()
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è –∏–∑ –º–∞—Å—Ç–µ—Ä-–ª–∏—Å—Ç–∞: {name} ({frames} –∫–∞–¥—Ä–æ–≤)")
        return True
    
    def add_animation(self, name, sprite_file, frame_width=64, frame_height=64, frames=4, speed=10, loop=True):
        """
        –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –û–¢–î–ï–õ–¨–ù–´–ú —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–æ–º
        name - –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "walk", "jump", "idle")
        sprite_file - –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞ –¥–ª—è —ç—Ç–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
        frame_width, frame_height - —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
        frames - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –≤ –∞–Ω–∏–º–∞—Ü–∏–∏
        speed - —Å–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ (–±–æ–ª—å—à–µ = –º–µ–¥–ª–µ–Ω–Ω–µ–µ)
        loop - –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é
        """
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç –¥–ª—è —ç—Ç–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
            sprite_image = pygame.image.load(sprite_file)
            
            self.animations[name] = {
                'mode': 'separate',
                'sprite_image': sprite_image,
                'frame_width': frame_width,
                'frame_height': frame_height,
                'frames': frames,
                'speed': speed,
                'loop': loop,
                'finished': False
            }
            
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è, –¥–µ–ª–∞–µ–º –µ—ë —Ç–µ–∫—É—â–µ–π
            if self.current_animation is None:
                self.current_animation = name
                self.animation_speed = speed
                self.current_frame_width = frame_width
                self.current_frame_height = frame_height
                self._update_sprite_attributes()
            
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è: {name} ({frame_width}x{frame_height}, {frames} –∫–∞–¥—Ä–æ–≤)")
            return True
            
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é {name}: {sprite_file}")
            print(f"   –û—à–∏–±–∫–∞: {e}")
            return False
    
    def add_directional_animation(self, base_name, left_sprite, right_sprite, frame_width=64, frame_height=64, frames=4, speed=10, loop=True):
        """
        –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –û–¢–î–ï–õ–¨–ù–´–ú–ò —Å–ø—Ä–∞–π—Ç–∞–º–∏ –¥–ª—è –ª–µ–≤–æ–≥–æ –∏ –ø—Ä–∞–≤–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        base_name - –±–∞–∑–æ–≤–æ–µ –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "walk")
        left_sprite - —Å–ø—Ä–∞–π—Ç –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –≤–ª–µ–≤–æ
        right_sprite - —Å–ø—Ä–∞–π—Ç –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –≤–ø—Ä–∞–≤–æ
        """
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        left_success = self.add_animation(f"{base_name}_left", left_sprite, frame_width, frame_height, frames, speed, loop)
        right_success = self.add_animation(f"{base_name}_right", right_sprite, frame_width, frame_height, frames, speed, loop)
        
        if left_success and right_success:
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è: {base_name} (–ª–µ–≤–æ/–ø—Ä–∞–≤–æ)")
            return True
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é: {base_name}")
            return False
    
    def _update_sprite_attributes(self):
        """
        –û–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã pygame.sprite.Sprite (image –∏ rect)
        """
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã image –∏ rect
        scaled_width = int(self.current_frame_width * self.scale)
        scaled_height = int(self.current_frame_height * self.scale)
        
        self.image = pygame.Surface((scaled_width, scaled_height), pygame.SRCALPHA)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º rect, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ–∑–∏—Ü–∏—é
        old_center = self.rect.center if hasattr(self, 'rect') else (self.x, self.y)
        self.rect = pygame.Rect(0, 0, scaled_width, scaled_height)
        self.rect.center = old_center
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º x, y —Å rect
        self.x = self.rect.x
        self.y = self.rect.y
    
    def play_animation(self, name, reset=True):
        """
        –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        name - –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
        reset - –Ω–∞—á–∞—Ç—å —Å –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞
        """
        # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∂–∏–º –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
        if self.direction_mode == self.SEPARATE_DIRECTIONS:
            direction_suffix = "_right" if self.facing_right else "_left"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
            directional_name = f"{name}{direction_suffix}"
            if directional_name in self.animations:
                name = directional_name
            elif name in self.animations:
                # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é
                pass
            else:
                print(f"‚ùå –ê–Ω–∏–º–∞—Ü–∏—è {name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return
        
        if name in self.animations:
            if self.current_animation != name or reset:
                self.current_animation = name
                self.current_frame = 0
                self.animation_timer = 0
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–∫—É—â–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏
                animation = self.animations[name]
                self.animation_speed = animation['speed']
                self.current_frame_width = animation['frame_width']
                self.current_frame_height = animation['frame_height']
                animation['finished'] = False
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã —Å–ø—Ä–∞–π—Ç–∞
                self._update_sprite_attributes()
    
    def update(self):
        """
        –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (–≤—ã–∑—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –∏–≥—Ä—ã)
        –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å pygame.sprite.Group.update()!
        """
        if self.current_animation is None:
            return
        
        animation = self.animations[self.current_animation]
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
        self.animation_timer += 1
        
        # –í—Ä–µ–º—è —Å–º–µ–Ω–∏—Ç—å –∫–∞–¥—Ä?
        if self.animation_timer >= self.animation_speed:
            self.animation_timer = 0
            self.current_frame += 1
            
            # –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∫–∞–¥—Ä—ã?
            if self.current_frame >= animation['frames']:
                if animation['loop']:
                    self.current_frame = 0  # –ù–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
                else:
                    self.current_frame = animation['frames'] - 1
                    animation['finished'] = True
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–π—Ç–∞
        self._update_image()
    
    def _update_image(self):
        """
        –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–π—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        """
        if self.current_animation is None:
            return
        
        animation = self.animations[self.current_animation]
        sprite_image = animation['sprite_image']
        frame_width = animation['frame_width']
        frame_height = animation['frame_height']
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–∞–¥—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        if animation['mode'] == 'master' or animation['mode'] == 'range':
            # –†–µ–∂–∏–º –±–æ–ª—å—à–æ–≥–æ —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—Ä–∞–Ω–µ–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
            frame_x, frame_y = animation['frame_positions'][self.current_frame]
        else:
            # –†–µ–∂–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞ - –∫–∞–¥—Ä—ã –∏–¥—É—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
            frame_x = self.current_frame * frame_width
            frame_y = 0
        
        # –í—ã—Ä–µ–∑–∞–µ–º –∫–∞–¥—Ä
        frame_rect = (frame_x, frame_y, frame_width, frame_height)
        frame_surface = pygame.Surface((frame_width, frame_height), pygame.SRCALPHA)
        frame_surface.blit(sprite_image, (0, 0), frame_rect)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        if self.direction_mode == self.AUTO_FLIP and not self.facing_right:
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
            frame_surface = pygame.transform.flip(frame_surface, True, False)
        elif self.direction_mode == self.NO_FLIP:
            # –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–µ—Ä–∫–∞–ª–∏–º
            pass
        # –î–ª—è SEPARATE_DIRECTIONS –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω—É–∂–Ω–æ - —É –Ω–∞—Å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ø—Ä–∞–π—Ç—ã
        
        # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if self.scale != 1.0:
            new_width = int(frame_width * self.scale)
            new_height = int(frame_height * self.scale)
            frame_surface = pygame.transform.scale(frame_surface, (new_width, new_height))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–π—Ç–∞
        self.image = frame_surface
        self._original_image = frame_surface.copy()
    
    def move(self, dx, dy):
        """
        –î–≤–∏–≥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        dx, dy - —Å–º–µ—â–µ–Ω–∏–µ –ø–æ x –∏ y
        """
        self.x += dx
        self.y += dy
        self.rect.x = self.x
        self.rect.y = self.y
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ)
        if self.direction_mode != self.NO_FLIP:
            if dx > 0:
                self.facing_right = True
            elif dx < 0:
                self.facing_right = False
    
    def set_position(self, x, y):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        """
        self.x = x
        self.y = y
        self.rect.x = x
        self.rect.y = y
    
    def get_rect(self):
        """
        –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
        –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å pygame.sprite!
        """
        return self.rect
    
    def is_animation_finished(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ —Ç–µ–∫—É—â–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
        """
        if self.current_animation is None:
            return True
        return self.animations[self.current_animation]['finished']
    
    # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –° pygame.sprite
    
    def kill(self):
        """
        –£–¥–∞–ª—è–µ–º —Å–ø—Ä–∞–π—Ç –∏–∑ –≤—Å–µ—Ö –≥—Ä—É–ø–ø (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ pygame.sprite.Sprite)
        """
        super().kill()
    
    def alive(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–∏–≤ –ª–∏ —Å–ø—Ä–∞–π—Ç (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ pygame.sprite.Sprite)
        """
        return super().alive()
    
    def groups(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–ø—Ä–∞–π—Ç
        """
        return super().groups()

    def add_animation_from_range(self, name, start_frame, end_frame, speed=10, loop=True):
        """
        –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é, –≤—ã–±–∏—Ä–∞—è –õ–Æ–ë–´–ï –∫–∞–¥—Ä—ã –∏–∑ –±–æ–ª—å—à–æ–≥–æ —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞
        name - –∏–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
        start_frame - –Ω–æ–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 1, –Ω–µ —Å 0!)
        end_frame - –Ω–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–∞–¥—Ä–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
        speed - —Å–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
        loop - –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é
        
        –ü—Ä–∏–º–µ—Ä—ã:
        add_animation_from_range("idle", 1, 4)     # –ö–∞–¥—Ä—ã 1-4
        add_animation_from_range("walk", 5, 12)    # –ö–∞–¥—Ä—ã 5-12  
        add_animation_from_range("jump", 30, 32)   # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∫–∞–¥—Ä–∞
        """
        if self.master_sprite_sheet is None:
            print(f"‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–∞—Å—Ç–µ—Ä —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç —á–µ—Ä–µ–∑ load_master_sprite_sheet()")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω–∞
        if start_frame < 1:
            print(f"‚ùå –ù–æ–º–µ—Ä –∫–∞–¥—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1! –£–∫–∞–∑–∞–Ω–æ: {start_frame}")
            return False
        
        if end_frame < start_frame:
            print(f"‚ùå –ö–æ–Ω–µ—á–Ω—ã–π –∫–∞–¥—Ä ({end_frame}) –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ ({start_frame})")
            return False
        
        # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –≤ —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–µ
        sprite_width = self.master_sprite_sheet.get_width()
        sprite_height = self.master_sprite_sheet.get_height()
        total_columns = sprite_width // self.master_frame_width
        total_rows = sprite_height // self.master_frame_height
        total_frames = total_columns * total_rows
        
        if end_frame > total_frames:
            print(f"‚ùå –í —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–µ –≤—Å–µ–≥–æ {total_frames} –∫–∞–¥—Ä–æ–≤, –∞ –∑–∞–ø—Ä–æ—à–µ–Ω –∫–∞–¥—Ä {end_frame}")
            return False
        
        # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤
        frame_positions = []
        frames_count = end_frame - start_frame + 1
        
        for i in range(frames_count):
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∏–∑ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ "—Å 1" –≤ –Ω—É–º–µ—Ä–∞—Ü–∏—é "—Å 0"
            frame_index = (start_frame - 1) + i
            
            # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∏ –∫–æ–ª–æ–Ω–∫—É
            row = frame_index // self.master_columns
            col = frame_index % self.master_columns
            
            # –í—ã—á–∏—Å–ª—è–µ–º –ø–∏–∫—Å–µ–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            x = col * self.master_frame_width
            y = row * self.master_frame_height
            
            frame_positions.append((x, y))
        
        self.animations[name] = {
            'mode': 'range',
            'sprite_image': self.master_sprite_sheet,
            'frame_width': self.master_frame_width,
            'frame_height': self.master_frame_height,
            'frames': frames_count,
            'speed': speed,
            'loop': loop,
            'finished': False,
            'frame_positions': frame_positions,
            'start_frame': start_frame,
            'end_frame': end_frame
        }
        
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è, –¥–µ–ª–∞–µ–º –µ—ë —Ç–µ–∫—É—â–µ–π
        if self.current_animation is None:
            self.current_animation = name
            self.animation_speed = speed
            self.current_frame_width = self.master_frame_width
            self.current_frame_height = self.master_frame_height
            self._update_sprite_attributes()
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: {name} (–∫–∞–¥—Ä—ã {start_frame}-{end_frame}, –≤—Å–µ–≥–æ {frames_count})")
        return True
    
    def show_frame_grid(self):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–µ—Ç–∫—É –∫–∞–¥—Ä–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤—ã–±–æ—Ä–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤
        """
        if self.master_sprite_sheet is None:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–∞—Å—Ç–µ—Ä —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç")
            return
        
        sprite_width = self.master_sprite_sheet.get_width()
        sprite_height = self.master_sprite_sheet.get_height()
        total_columns = sprite_width // self.master_frame_width
        total_rows = sprite_height // self.master_frame_height
        
        print(f"\nüóÇÔ∏è  –°–ï–¢–ö–ê –ö–ê–î–†–û–í ({total_columns} –∫–æ–ª–æ–Ω–æ–∫ √ó {total_rows} —Å—Ç—Ä–æ–∫):")
        print("=" * (total_columns * 5))
        
        for row in range(total_rows):
            line = ""
            for col in range(total_columns):
                frame_number = row * total_columns + col + 1  # –ù—É–º–µ—Ä–∞—Ü–∏—è —Å 1
                line += f"[{frame_number:2d}]"
            print(f"–°—Ç—Ä–æ–∫–∞ {row + 1}: {line}")
        
        print("=" * (total_columns * 5))
        print(f"üìä –í—Å–µ–≥–æ –∫–∞–¥—Ä–æ–≤: {total_columns * total_rows}")
        print("üí° –ù—É–º–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1 (–Ω–µ —Å 0)!")
        print("\n–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
        print("hero.add_animation_from_range('idle', 1, 4)      # –ü–µ—Ä–≤—ã–µ 4 –∫–∞–¥—Ä–∞")
        print("hero.add_animation_from_range('walk', 5, 12)     # –ö–∞–¥—Ä—ã 5-12")
        print(f"hero.add_animation_from_range('jump', {total_columns * total_rows - 2}, {total_columns * total_rows})  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∫–∞–¥—Ä–∞")


class AnimationPresets:
    """
    –ì–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    """
    
    @staticmethod
    def setup_platformer_hero(character, sprite_sheet_name):
        """
        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä–∞ (–≥–µ—Ä–æ–π —Å –º–µ—á–æ–º)
        """
        character.add_animation("idle", sprite_sheet_name, row=0, frames=4, speed=15)
        character.add_animation("walk", sprite_sheet_name, row=1, frames=8, speed=8)
        character.add_animation("run", sprite_sheet_name, row=2, frames=8, speed=5)
        character.add_animation("jump", sprite_sheet_name, row=3, frames=4, speed=6, loop=False)
        character.add_animation("attack", sprite_sheet_name, row=4, frames=6, speed=4, loop=False)
        character.add_animation("hit", sprite_sheet_name, row=5, frames=3, speed=8, loop=False)
        character.add_animation("die", sprite_sheet_name, row=6, frames=4, speed=10, loop=False)
    
    @staticmethod
    def setup_simple_character(character, sprite_sheet_name):
        """
        –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö
        """
        character.add_animation("idle", sprite_sheet_name, row=0, frames=4, speed=12)
        character.add_animation("walk", sprite_sheet_name, row=1, frames=4, speed=8)
        character.add_animation("jump", sprite_sheet_name, row=2, frames=4, speed=6)


class GameAnimator(pygame.sprite.Group):
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –≤ –∏–≥—Ä–µ
    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç pygame.sprite.Group –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏!
    """
    
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å pygame.sprite.Group
        super().__init__()
    
    def add_character(self, character):
        """
        –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –≥—Ä—É–ø–ø—É (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å pygame.sprite.Group)
        """
        self.add(character)
    
    def update_all(self):
        """
        –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π update())
        """
        self.update()  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ pygame.sprite.Group
    
    def draw_all(self, screen):
        """
        –†–∏—Å—É–µ–º –≤—Å–µ—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π draw())
        """
        self.draw(screen)  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ pygame.sprite.Group


# –§—É–Ω–∫—Ü–∏–∏-–ø–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π

def create_hero_separate_sprites(x=0, y=0, scale=1.0, 
                                idle_sprite="idle.png", 
                                walk_sprite="walk.png", 
                                jump_sprite="jump.png",
                                frame_size=64):
    """
    –°–æ–∑–¥–∞–µ–º –≥–µ—Ä–æ—è —Å –û–¢–î–ï–õ–¨–ù–´–ú–ò —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    """
    hero = AnimatedCharacter(x, y, scale)
    hero.add_animation("idle", idle_sprite, frame_size, frame_size, frames=4, speed=15)
    hero.add_animation("walk", walk_sprite, frame_size, frame_size, frames=4, speed=8)
    hero.add_animation("jump", jump_sprite, frame_size, frame_size, frames=4, speed=6)
    return hero

def create_hero_master_sprite(x=0, y=0, scale=1.0, 
                             master_sprite="all_animations.png", 
                             frame_size=64, columns=8):
    """
    –°–æ–∑–¥–∞–µ–º –≥–µ—Ä–æ—è —Å –û–î–ù–ò–ú –ë–û–õ–¨–®–ò–ú —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–æ–º
    """
    hero = AnimatedCharacter(x, y, scale)
    hero.load_master_sprite_sheet(master_sprite, frame_size, frame_size, columns)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É (–∫–∞–¥—Ä—ã –±–µ—Ä—É—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ!)
    hero.add_animation_from_master("idle", frames=4, speed=15)  # –ö–∞–¥—Ä—ã 0-3
    hero.add_animation_from_master("walk", frames=8, speed=8)   # –ö–∞–¥—Ä—ã 4-11  
    hero.add_animation_from_master("jump", frames=4, speed=6)   # –ö–∞–¥—Ä—ã 12-15
    
    return hero

def create_custom_hero(x=0, y=0, scale=1.0):
    """
    –°–æ–∑–¥–∞–µ–º –≥–µ—Ä–æ—è –¥–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä—É—á–Ω—É—é
    """
    return AnimatedCharacter(x, y, scale) 